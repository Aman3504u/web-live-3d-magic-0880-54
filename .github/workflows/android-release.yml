name: Android Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 35
        build-tools: 35.0.0
      
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npm run build
      
    - name: Copy Android files
      run: |
        mkdir -p android/app/src/main
        cp -r android/* android/ || true
      
    - name: Add Android platform
      run: npx cap add android
      
    - name: Copy custom Android files
      run: |
        cp android/app/build.gradle android/app/build.gradle
        cp android/variables.gradle android/variables.gradle
        cp android/app/src/main/AndroidManifest.xml android/app/src/main/AndroidManifest.xml
        mkdir -p android/app/src/main/java/app/lovable/web_live_3d_magic
        cp android/LiveWallpaperService.java android/app/src/main/java/app/lovable/web_live_3d_magic/
        mkdir -p android/app/src/main/res/xml
        cp android/wallpaper_service.xml android/app/src/main/res/xml/
      
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Grant permissions for Gradle
      run: |
        cd android
        chmod +x gradlew
        
    - name: Build Android Debug APK
      run: |
        cd android
        ./gradlew clean assembleDebug --no-daemon --stacktrace
        
    - name: Build Android Release APK
      run: |
        cd android
        ./gradlew assembleRelease --no-daemon --stacktrace
        
    - name: Sign APK (Android 15 compatible)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        cd android/app/build/outputs/apk/release
        $ANDROID_HOME/build-tools/35.0.0/zipalign -v -p 4 app-release-unsigned.apk app-release-aligned.apk || true
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-${{ github.run_number }}
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk-${{ github.run_number }}
        path: android/app/build/outputs/apk/release/*.apk
        
    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          android/app/build/outputs/apk/debug/app-debug.apk
          android/app/build/outputs/apk/release/app-release-unsigned.apk
        body: |
          ## ðŸš€ Web Live 3D Magic - Android Release
          
          ### What's New
          - Interactive 3D wallpapers from websites
          - Hardware-accelerated WebView
          - Touch interaction support
          - Android 15 compatibility
          
          ### Installation
          1. Download the APK file
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Set as live wallpaper in Settings > Wallpaper
          
          ### Files
          - `app-debug.apk` - Debug version for testing
          - `app-release-unsigned.apk` - Release version (unsigned)
          
          ### Requirements
          - Android 8.0+ (API 26+)
          - OpenGL ES 3.0 support
          - 2GB+ RAM recommended
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}